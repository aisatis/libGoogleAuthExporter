// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google_auth.proto

#include "google_auth.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_5fauth_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto;
namespace googleauth {
class MigrationPayload_OtpParametersDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MigrationPayload_OtpParameters> _instance;
} _MigrationPayload_OtpParameters_default_instance_;
class MigrationPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MigrationPayload> _instance;
} _MigrationPayload_default_instance_;
}  // namespace googleauth
static void InitDefaultsscc_info_MigrationPayload_google_5fauth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::googleauth::_MigrationPayload_default_instance_;
    new (ptr) ::googleauth::MigrationPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::googleauth::MigrationPayload::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MigrationPayload_google_5fauth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MigrationPayload_google_5fauth_2eproto}, {
      &scc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto.base,}};

static void InitDefaultsscc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::googleauth::_MigrationPayload_OtpParameters_default_instance_;
    new (ptr) ::googleauth::MigrationPayload_OtpParameters();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::googleauth::MigrationPayload_OtpParameters::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_google_5fauth_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_google_5fauth_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_google_5fauth_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_google_5fauth_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, secret_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, name_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, issuer_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, algorithm_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, digits_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, type_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload_OtpParameters, counter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload, otp_parameters_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload, version_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload, batch_size_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload, batch_index_),
  PROTOBUF_FIELD_OFFSET(::googleauth::MigrationPayload, batch_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::googleauth::MigrationPayload_OtpParameters)},
  { 12, -1, sizeof(::googleauth::MigrationPayload)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::googleauth::_MigrationPayload_OtpParameters_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::googleauth::_MigrationPayload_default_instance_),
};

const char descriptor_table_protodef_google_5fauth_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021google_auth.proto\022\ngoogleauth\"\330\003\n\020Migr"
  "ationPayload\022B\n\016otp_parameters\030\001 \003(\0132*.g"
  "oogleauth.MigrationPayload.OtpParameters"
  "\022\017\n\007version\030\002 \001(\005\022\022\n\nbatch_size\030\003 \001(\005\022\023\n"
  "\013batch_index\030\004 \001(\005\022\020\n\010batch_id\030\005 \001(\005\032\315\001\n"
  "\rOtpParameters\022\016\n\006secret\030\001 \001(\014\022\014\n\004name\030\002"
  " \001(\t\022\016\n\006issuer\030\003 \001(\t\0229\n\talgorithm\030\004 \001(\0162"
  "&.googleauth.MigrationPayload.Algorithm\022"
  "\016\n\006digits\030\005 \001(\005\0222\n\004type\030\006 \001(\0162$.googleau"
  "th.MigrationPayload.OtpType\022\017\n\007counter\030\007"
  " \001(\003\",\n\tAlgorithm\022\020\n\014ALGO_INVALID\020\000\022\r\n\tA"
  "LGO_SHA1\020\001\"6\n\007OtpType\022\017\n\013OTP_INVALID\020\000\022\014"
  "\n\010OTP_HOTP\020\001\022\014\n\010OTP_TOTP\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_google_5fauth_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_google_5fauth_2eproto_sccs[2] = {
  &scc_info_MigrationPayload_google_5fauth_2eproto.base,
  &scc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_google_5fauth_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_5fauth_2eproto = {
  false, false, descriptor_table_protodef_google_5fauth_2eproto, "google_auth.proto", 514,
  &descriptor_table_google_5fauth_2eproto_once, descriptor_table_google_5fauth_2eproto_sccs, descriptor_table_google_5fauth_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_google_5fauth_2eproto::offsets,
  file_level_metadata_google_5fauth_2eproto, 2, file_level_enum_descriptors_google_5fauth_2eproto, file_level_service_descriptors_google_5fauth_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_google_5fauth_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_google_5fauth_2eproto)), true);
namespace googleauth {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MigrationPayload_Algorithm_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_5fauth_2eproto);
  return file_level_enum_descriptors_google_5fauth_2eproto[0];
}
bool MigrationPayload_Algorithm_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MigrationPayload_Algorithm MigrationPayload::ALGO_INVALID;
constexpr MigrationPayload_Algorithm MigrationPayload::ALGO_SHA1;
constexpr MigrationPayload_Algorithm MigrationPayload::Algorithm_MIN;
constexpr MigrationPayload_Algorithm MigrationPayload::Algorithm_MAX;
constexpr int MigrationPayload::Algorithm_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MigrationPayload_OtpType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_google_5fauth_2eproto);
  return file_level_enum_descriptors_google_5fauth_2eproto[1];
}
bool MigrationPayload_OtpType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MigrationPayload_OtpType MigrationPayload::OTP_INVALID;
constexpr MigrationPayload_OtpType MigrationPayload::OTP_HOTP;
constexpr MigrationPayload_OtpType MigrationPayload::OTP_TOTP;
constexpr MigrationPayload_OtpType MigrationPayload::OtpType_MIN;
constexpr MigrationPayload_OtpType MigrationPayload::OtpType_MAX;
constexpr int MigrationPayload::OtpType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void MigrationPayload_OtpParameters::InitAsDefaultInstance() {
}
class MigrationPayload_OtpParameters::_Internal {
 public:
};

MigrationPayload_OtpParameters::MigrationPayload_OtpParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:googleauth.MigrationPayload.OtpParameters)
}
MigrationPayload_OtpParameters::MigrationPayload_OtpParameters(const MigrationPayload_OtpParameters& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_secret().empty()) {
    secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_secret(),
      GetArena());
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  issuer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_issuer().empty()) {
    issuer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_issuer(),
      GetArena());
  }
  ::memcpy(&algorithm_, &from.algorithm_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&algorithm_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:googleauth.MigrationPayload.OtpParameters)
}

void MigrationPayload_OtpParameters::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto.base);
  secret_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  issuer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&algorithm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&algorithm_)) + sizeof(type_));
}

MigrationPayload_OtpParameters::~MigrationPayload_OtpParameters() {
  // @@protoc_insertion_point(destructor:googleauth.MigrationPayload.OtpParameters)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MigrationPayload_OtpParameters::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  secret_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  issuer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MigrationPayload_OtpParameters::ArenaDtor(void* object) {
  MigrationPayload_OtpParameters* _this = reinterpret_cast< MigrationPayload_OtpParameters* >(object);
  (void)_this;
}
void MigrationPayload_OtpParameters::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MigrationPayload_OtpParameters::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MigrationPayload_OtpParameters& MigrationPayload_OtpParameters::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MigrationPayload_OtpParameters_google_5fauth_2eproto.base);
  return *internal_default_instance();
}


void MigrationPayload_OtpParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:googleauth.MigrationPayload.OtpParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  issuer_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&algorithm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&algorithm_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MigrationPayload_OtpParameters::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes secret = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_secret();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "googleauth.MigrationPayload.OtpParameters.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string issuer = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_issuer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "googleauth.MigrationPayload.OtpParameters.issuer"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .googleauth.MigrationPayload.Algorithm algorithm = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_algorithm(static_cast<::googleauth::MigrationPayload_Algorithm>(val));
        } else goto handle_unusual;
        continue;
      // int32 digits = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          digits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .googleauth.MigrationPayload.OtpType type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::googleauth::MigrationPayload_OtpType>(val));
        } else goto handle_unusual;
        continue;
      // int64 counter = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          counter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MigrationPayload_OtpParameters::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:googleauth.MigrationPayload.OtpParameters)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes secret = 1;
  if (this->secret().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_secret(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "googleauth.MigrationPayload.OtpParameters.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string issuer = 3;
  if (this->issuer().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_issuer().data(), static_cast<int>(this->_internal_issuer().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "googleauth.MigrationPayload.OtpParameters.issuer");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_issuer(), target);
  }

  // .googleauth.MigrationPayload.Algorithm algorithm = 4;
  if (this->algorithm() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_algorithm(), target);
  }

  // int32 digits = 5;
  if (this->digits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_digits(), target);
  }

  // .googleauth.MigrationPayload.OtpType type = 6;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_type(), target);
  }

  // int64 counter = 7;
  if (this->counter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(7, this->_internal_counter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:googleauth.MigrationPayload.OtpParameters)
  return target;
}

size_t MigrationPayload_OtpParameters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:googleauth.MigrationPayload.OtpParameters)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes secret = 1;
  if (this->secret().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_secret());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string issuer = 3;
  if (this->issuer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_issuer());
  }

  // .googleauth.MigrationPayload.Algorithm algorithm = 4;
  if (this->algorithm() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_algorithm());
  }

  // int32 digits = 5;
  if (this->digits() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_digits());
  }

  // int64 counter = 7;
  if (this->counter() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_counter());
  }

  // .googleauth.MigrationPayload.OtpType type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrationPayload_OtpParameters::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:googleauth.MigrationPayload.OtpParameters)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrationPayload_OtpParameters* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MigrationPayload_OtpParameters>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:googleauth.MigrationPayload.OtpParameters)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:googleauth.MigrationPayload.OtpParameters)
    MergeFrom(*source);
  }
}

void MigrationPayload_OtpParameters::MergeFrom(const MigrationPayload_OtpParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:googleauth.MigrationPayload.OtpParameters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.secret().size() > 0) {
    _internal_set_secret(from._internal_secret());
  }
  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.issuer().size() > 0) {
    _internal_set_issuer(from._internal_issuer());
  }
  if (from.algorithm() != 0) {
    _internal_set_algorithm(from._internal_algorithm());
  }
  if (from.digits() != 0) {
    _internal_set_digits(from._internal_digits());
  }
  if (from.counter() != 0) {
    _internal_set_counter(from._internal_counter());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void MigrationPayload_OtpParameters::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:googleauth.MigrationPayload.OtpParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrationPayload_OtpParameters::CopyFrom(const MigrationPayload_OtpParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:googleauth.MigrationPayload.OtpParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrationPayload_OtpParameters::IsInitialized() const {
  return true;
}

void MigrationPayload_OtpParameters::InternalSwap(MigrationPayload_OtpParameters* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  secret_.Swap(&other->secret_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  issuer_.Swap(&other->issuer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MigrationPayload_OtpParameters, type_)
      + sizeof(MigrationPayload_OtpParameters::type_)
      - PROTOBUF_FIELD_OFFSET(MigrationPayload_OtpParameters, algorithm_)>(
          reinterpret_cast<char*>(&algorithm_),
          reinterpret_cast<char*>(&other->algorithm_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MigrationPayload_OtpParameters::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MigrationPayload::InitAsDefaultInstance() {
}
class MigrationPayload::_Internal {
 public:
};

MigrationPayload::MigrationPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  otp_parameters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:googleauth.MigrationPayload)
}
MigrationPayload::MigrationPayload(const MigrationPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      otp_parameters_(from.otp_parameters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&batch_id_) -
    reinterpret_cast<char*>(&version_)) + sizeof(batch_id_));
  // @@protoc_insertion_point(copy_constructor:googleauth.MigrationPayload)
}

void MigrationPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MigrationPayload_google_5fauth_2eproto.base);
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_id_) -
      reinterpret_cast<char*>(&version_)) + sizeof(batch_id_));
}

MigrationPayload::~MigrationPayload() {
  // @@protoc_insertion_point(destructor:googleauth.MigrationPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MigrationPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void MigrationPayload::ArenaDtor(void* object) {
  MigrationPayload* _this = reinterpret_cast< MigrationPayload* >(object);
  (void)_this;
}
void MigrationPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MigrationPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MigrationPayload& MigrationPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MigrationPayload_google_5fauth_2eproto.base);
  return *internal_default_instance();
}


void MigrationPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:googleauth.MigrationPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  otp_parameters_.Clear();
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_id_) -
      reinterpret_cast<char*>(&version_)) + sizeof(batch_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MigrationPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .googleauth.MigrationPayload.OtpParameters otp_parameters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_otp_parameters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 batch_size = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          batch_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 batch_index = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          batch_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 batch_id = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          batch_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MigrationPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:googleauth.MigrationPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .googleauth.MigrationPayload.OtpParameters otp_parameters = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_otp_parameters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_otp_parameters(i), target, stream);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_version(), target);
  }

  // int32 batch_size = 3;
  if (this->batch_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_batch_size(), target);
  }

  // int32 batch_index = 4;
  if (this->batch_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_batch_index(), target);
  }

  // int32 batch_id = 5;
  if (this->batch_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_batch_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:googleauth.MigrationPayload)
  return target;
}

size_t MigrationPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:googleauth.MigrationPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .googleauth.MigrationPayload.OtpParameters otp_parameters = 1;
  total_size += 1UL * this->_internal_otp_parameters_size();
  for (const auto& msg : this->otp_parameters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_version());
  }

  // int32 batch_size = 3;
  if (this->batch_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_batch_size());
  }

  // int32 batch_index = 4;
  if (this->batch_index() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_batch_index());
  }

  // int32 batch_id = 5;
  if (this->batch_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_batch_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MigrationPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:googleauth.MigrationPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const MigrationPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MigrationPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:googleauth.MigrationPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:googleauth.MigrationPayload)
    MergeFrom(*source);
  }
}

void MigrationPayload::MergeFrom(const MigrationPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:googleauth.MigrationPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  otp_parameters_.MergeFrom(from.otp_parameters_);
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.batch_size() != 0) {
    _internal_set_batch_size(from._internal_batch_size());
  }
  if (from.batch_index() != 0) {
    _internal_set_batch_index(from._internal_batch_index());
  }
  if (from.batch_id() != 0) {
    _internal_set_batch_id(from._internal_batch_id());
  }
}

void MigrationPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:googleauth.MigrationPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MigrationPayload::CopyFrom(const MigrationPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:googleauth.MigrationPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MigrationPayload::IsInitialized() const {
  return true;
}

void MigrationPayload::InternalSwap(MigrationPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  otp_parameters_.InternalSwap(&other->otp_parameters_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MigrationPayload, batch_id_)
      + sizeof(MigrationPayload::batch_id_)
      - PROTOBUF_FIELD_OFFSET(MigrationPayload, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MigrationPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace googleauth
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::googleauth::MigrationPayload_OtpParameters* Arena::CreateMaybeMessage< ::googleauth::MigrationPayload_OtpParameters >(Arena* arena) {
  return Arena::CreateMessageInternal< ::googleauth::MigrationPayload_OtpParameters >(arena);
}
template<> PROTOBUF_NOINLINE ::googleauth::MigrationPayload* Arena::CreateMaybeMessage< ::googleauth::MigrationPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::googleauth::MigrationPayload >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
