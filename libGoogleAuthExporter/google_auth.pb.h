// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google_auth.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_5fauth_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_google_5fauth_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_google_5fauth_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_google_5fauth_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_google_5fauth_2eproto;
namespace googleauth {
class MigrationPayload;
class MigrationPayloadDefaultTypeInternal;
extern MigrationPayloadDefaultTypeInternal _MigrationPayload_default_instance_;
class MigrationPayload_OtpParameters;
class MigrationPayload_OtpParametersDefaultTypeInternal;
extern MigrationPayload_OtpParametersDefaultTypeInternal _MigrationPayload_OtpParameters_default_instance_;
}  // namespace googleauth
PROTOBUF_NAMESPACE_OPEN
template<> ::googleauth::MigrationPayload* Arena::CreateMaybeMessage<::googleauth::MigrationPayload>(Arena*);
template<> ::googleauth::MigrationPayload_OtpParameters* Arena::CreateMaybeMessage<::googleauth::MigrationPayload_OtpParameters>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace googleauth {

enum MigrationPayload_Algorithm : int {
  MigrationPayload_Algorithm_ALGO_INVALID = 0,
  MigrationPayload_Algorithm_ALGO_SHA1 = 1,
  MigrationPayload_Algorithm_MigrationPayload_Algorithm_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MigrationPayload_Algorithm_MigrationPayload_Algorithm_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MigrationPayload_Algorithm_IsValid(int value);
constexpr MigrationPayload_Algorithm MigrationPayload_Algorithm_Algorithm_MIN = MigrationPayload_Algorithm_ALGO_INVALID;
constexpr MigrationPayload_Algorithm MigrationPayload_Algorithm_Algorithm_MAX = MigrationPayload_Algorithm_ALGO_SHA1;
constexpr int MigrationPayload_Algorithm_Algorithm_ARRAYSIZE = MigrationPayload_Algorithm_Algorithm_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MigrationPayload_Algorithm_descriptor();
template<typename T>
inline const std::string& MigrationPayload_Algorithm_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MigrationPayload_Algorithm>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MigrationPayload_Algorithm_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MigrationPayload_Algorithm_descriptor(), enum_t_value);
}
inline bool MigrationPayload_Algorithm_Parse(
    const std::string& name, MigrationPayload_Algorithm* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MigrationPayload_Algorithm>(
    MigrationPayload_Algorithm_descriptor(), name, value);
}
enum MigrationPayload_OtpType : int {
  MigrationPayload_OtpType_OTP_INVALID = 0,
  MigrationPayload_OtpType_OTP_HOTP = 1,
  MigrationPayload_OtpType_OTP_TOTP = 2,
  MigrationPayload_OtpType_MigrationPayload_OtpType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  MigrationPayload_OtpType_MigrationPayload_OtpType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool MigrationPayload_OtpType_IsValid(int value);
constexpr MigrationPayload_OtpType MigrationPayload_OtpType_OtpType_MIN = MigrationPayload_OtpType_OTP_INVALID;
constexpr MigrationPayload_OtpType MigrationPayload_OtpType_OtpType_MAX = MigrationPayload_OtpType_OTP_TOTP;
constexpr int MigrationPayload_OtpType_OtpType_ARRAYSIZE = MigrationPayload_OtpType_OtpType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MigrationPayload_OtpType_descriptor();
template<typename T>
inline const std::string& MigrationPayload_OtpType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, MigrationPayload_OtpType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function MigrationPayload_OtpType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    MigrationPayload_OtpType_descriptor(), enum_t_value);
}
inline bool MigrationPayload_OtpType_Parse(
    const std::string& name, MigrationPayload_OtpType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<MigrationPayload_OtpType>(
    MigrationPayload_OtpType_descriptor(), name, value);
}
// ===================================================================

class MigrationPayload_OtpParameters PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:googleauth.MigrationPayload.OtpParameters) */ {
 public:
  inline MigrationPayload_OtpParameters() : MigrationPayload_OtpParameters(nullptr) {};
  virtual ~MigrationPayload_OtpParameters();

  MigrationPayload_OtpParameters(const MigrationPayload_OtpParameters& from);
  MigrationPayload_OtpParameters(MigrationPayload_OtpParameters&& from) noexcept
    : MigrationPayload_OtpParameters() {
    *this = ::std::move(from);
  }

  inline MigrationPayload_OtpParameters& operator=(const MigrationPayload_OtpParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline MigrationPayload_OtpParameters& operator=(MigrationPayload_OtpParameters&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MigrationPayload_OtpParameters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MigrationPayload_OtpParameters* internal_default_instance() {
    return reinterpret_cast<const MigrationPayload_OtpParameters*>(
               &_MigrationPayload_OtpParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MigrationPayload_OtpParameters& a, MigrationPayload_OtpParameters& b) {
    a.Swap(&b);
  }
  inline void Swap(MigrationPayload_OtpParameters* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MigrationPayload_OtpParameters* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MigrationPayload_OtpParameters* New() const final {
    return CreateMaybeMessage<MigrationPayload_OtpParameters>(nullptr);
  }

  MigrationPayload_OtpParameters* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MigrationPayload_OtpParameters>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MigrationPayload_OtpParameters& from);
  void MergeFrom(const MigrationPayload_OtpParameters& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MigrationPayload_OtpParameters* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "googleauth.MigrationPayload.OtpParameters";
  }
  protected:
  explicit MigrationPayload_OtpParameters(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_5fauth_2eproto);
    return ::descriptor_table_google_5fauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecretFieldNumber = 1,
    kNameFieldNumber = 2,
    kIssuerFieldNumber = 3,
    kAlgorithmFieldNumber = 4,
    kDigitsFieldNumber = 5,
    kCounterFieldNumber = 7,
    kTypeFieldNumber = 6,
  };
  // bytes secret = 1;
  void clear_secret();
  const std::string& secret() const;
  void set_secret(const std::string& value);
  void set_secret(std::string&& value);
  void set_secret(const char* value);
  void set_secret(const void* value, size_t size);
  std::string* mutable_secret();
  std::string* release_secret();
  void set_allocated_secret(std::string* secret);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_secret();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_secret(
      std::string* secret);
  private:
  const std::string& _internal_secret() const;
  void _internal_set_secret(const std::string& value);
  std::string* _internal_mutable_secret();
  public:

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string issuer = 3;
  void clear_issuer();
  const std::string& issuer() const;
  void set_issuer(const std::string& value);
  void set_issuer(std::string&& value);
  void set_issuer(const char* value);
  void set_issuer(const char* value, size_t size);
  std::string* mutable_issuer();
  std::string* release_issuer();
  void set_allocated_issuer(std::string* issuer);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_issuer();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_issuer(
      std::string* issuer);
  private:
  const std::string& _internal_issuer() const;
  void _internal_set_issuer(const std::string& value);
  std::string* _internal_mutable_issuer();
  public:

  // .googleauth.MigrationPayload.Algorithm algorithm = 4;
  void clear_algorithm();
  ::googleauth::MigrationPayload_Algorithm algorithm() const;
  void set_algorithm(::googleauth::MigrationPayload_Algorithm value);
  private:
  ::googleauth::MigrationPayload_Algorithm _internal_algorithm() const;
  void _internal_set_algorithm(::googleauth::MigrationPayload_Algorithm value);
  public:

  // int32 digits = 5;
  void clear_digits();
  ::PROTOBUF_NAMESPACE_ID::int32 digits() const;
  void set_digits(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_digits() const;
  void _internal_set_digits(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int64 counter = 7;
  void clear_counter();
  ::PROTOBUF_NAMESPACE_ID::int64 counter() const;
  void set_counter(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_counter() const;
  void _internal_set_counter(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // .googleauth.MigrationPayload.OtpType type = 6;
  void clear_type();
  ::googleauth::MigrationPayload_OtpType type() const;
  void set_type(::googleauth::MigrationPayload_OtpType value);
  private:
  ::googleauth::MigrationPayload_OtpType _internal_type() const;
  void _internal_set_type(::googleauth::MigrationPayload_OtpType value);
  public:

  // @@protoc_insertion_point(class_scope:googleauth.MigrationPayload.OtpParameters)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr secret_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr issuer_;
  int algorithm_;
  ::PROTOBUF_NAMESPACE_ID::int32 digits_;
  ::PROTOBUF_NAMESPACE_ID::int64 counter_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_5fauth_2eproto;
};
// -------------------------------------------------------------------

class MigrationPayload PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:googleauth.MigrationPayload) */ {
 public:
  inline MigrationPayload() : MigrationPayload(nullptr) {};
  virtual ~MigrationPayload();

  MigrationPayload(const MigrationPayload& from);
  MigrationPayload(MigrationPayload&& from) noexcept
    : MigrationPayload() {
    *this = ::std::move(from);
  }

  inline MigrationPayload& operator=(const MigrationPayload& from) {
    CopyFrom(from);
    return *this;
  }
  inline MigrationPayload& operator=(MigrationPayload&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MigrationPayload& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MigrationPayload* internal_default_instance() {
    return reinterpret_cast<const MigrationPayload*>(
               &_MigrationPayload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MigrationPayload& a, MigrationPayload& b) {
    a.Swap(&b);
  }
  inline void Swap(MigrationPayload* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MigrationPayload* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MigrationPayload* New() const final {
    return CreateMaybeMessage<MigrationPayload>(nullptr);
  }

  MigrationPayload* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MigrationPayload>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MigrationPayload& from);
  void MergeFrom(const MigrationPayload& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MigrationPayload* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "googleauth.MigrationPayload";
  }
  protected:
  explicit MigrationPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_google_5fauth_2eproto);
    return ::descriptor_table_google_5fauth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef MigrationPayload_OtpParameters OtpParameters;

  typedef MigrationPayload_Algorithm Algorithm;
  static constexpr Algorithm ALGO_INVALID =
    MigrationPayload_Algorithm_ALGO_INVALID;
  static constexpr Algorithm ALGO_SHA1 =
    MigrationPayload_Algorithm_ALGO_SHA1;
  static inline bool Algorithm_IsValid(int value) {
    return MigrationPayload_Algorithm_IsValid(value);
  }
  static constexpr Algorithm Algorithm_MIN =
    MigrationPayload_Algorithm_Algorithm_MIN;
  static constexpr Algorithm Algorithm_MAX =
    MigrationPayload_Algorithm_Algorithm_MAX;
  static constexpr int Algorithm_ARRAYSIZE =
    MigrationPayload_Algorithm_Algorithm_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Algorithm_descriptor() {
    return MigrationPayload_Algorithm_descriptor();
  }
  template<typename T>
  static inline const std::string& Algorithm_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Algorithm>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Algorithm_Name.");
    return MigrationPayload_Algorithm_Name(enum_t_value);
  }
  static inline bool Algorithm_Parse(const std::string& name,
      Algorithm* value) {
    return MigrationPayload_Algorithm_Parse(name, value);
  }

  typedef MigrationPayload_OtpType OtpType;
  static constexpr OtpType OTP_INVALID =
    MigrationPayload_OtpType_OTP_INVALID;
  static constexpr OtpType OTP_HOTP =
    MigrationPayload_OtpType_OTP_HOTP;
  static constexpr OtpType OTP_TOTP =
    MigrationPayload_OtpType_OTP_TOTP;
  static inline bool OtpType_IsValid(int value) {
    return MigrationPayload_OtpType_IsValid(value);
  }
  static constexpr OtpType OtpType_MIN =
    MigrationPayload_OtpType_OtpType_MIN;
  static constexpr OtpType OtpType_MAX =
    MigrationPayload_OtpType_OtpType_MAX;
  static constexpr int OtpType_ARRAYSIZE =
    MigrationPayload_OtpType_OtpType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  OtpType_descriptor() {
    return MigrationPayload_OtpType_descriptor();
  }
  template<typename T>
  static inline const std::string& OtpType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, OtpType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function OtpType_Name.");
    return MigrationPayload_OtpType_Name(enum_t_value);
  }
  static inline bool OtpType_Parse(const std::string& name,
      OtpType* value) {
    return MigrationPayload_OtpType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOtpParametersFieldNumber = 1,
    kVersionFieldNumber = 2,
    kBatchSizeFieldNumber = 3,
    kBatchIndexFieldNumber = 4,
    kBatchIdFieldNumber = 5,
  };
  // repeated .googleauth.MigrationPayload.OtpParameters otp_parameters = 1;
  int otp_parameters_size() const;
  private:
  int _internal_otp_parameters_size() const;
  public:
  void clear_otp_parameters();
  ::googleauth::MigrationPayload_OtpParameters* mutable_otp_parameters(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::googleauth::MigrationPayload_OtpParameters >*
      mutable_otp_parameters();
  private:
  const ::googleauth::MigrationPayload_OtpParameters& _internal_otp_parameters(int index) const;
  ::googleauth::MigrationPayload_OtpParameters* _internal_add_otp_parameters();
  public:
  const ::googleauth::MigrationPayload_OtpParameters& otp_parameters(int index) const;
  ::googleauth::MigrationPayload_OtpParameters* add_otp_parameters();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::googleauth::MigrationPayload_OtpParameters >&
      otp_parameters() const;

  // int32 version = 2;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::int32 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 batch_size = 3;
  void clear_batch_size();
  ::PROTOBUF_NAMESPACE_ID::int32 batch_size() const;
  void set_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_batch_size() const;
  void _internal_set_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 batch_index = 4;
  void clear_batch_index();
  ::PROTOBUF_NAMESPACE_ID::int32 batch_index() const;
  void set_batch_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_batch_index() const;
  void _internal_set_batch_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 batch_id = 5;
  void clear_batch_id();
  ::PROTOBUF_NAMESPACE_ID::int32 batch_id() const;
  void set_batch_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_batch_id() const;
  void _internal_set_batch_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:googleauth.MigrationPayload)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::googleauth::MigrationPayload_OtpParameters > otp_parameters_;
  ::PROTOBUF_NAMESPACE_ID::int32 version_;
  ::PROTOBUF_NAMESPACE_ID::int32 batch_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 batch_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 batch_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_google_5fauth_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MigrationPayload_OtpParameters

// bytes secret = 1;
inline void MigrationPayload_OtpParameters::clear_secret() {
  secret_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MigrationPayload_OtpParameters::secret() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.OtpParameters.secret)
  return _internal_secret();
}
inline void MigrationPayload_OtpParameters::set_secret(const std::string& value) {
  _internal_set_secret(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.OtpParameters.secret)
}
inline std::string* MigrationPayload_OtpParameters::mutable_secret() {
  // @@protoc_insertion_point(field_mutable:googleauth.MigrationPayload.OtpParameters.secret)
  return _internal_mutable_secret();
}
inline const std::string& MigrationPayload_OtpParameters::_internal_secret() const {
  return secret_.Get();
}
inline void MigrationPayload_OtpParameters::_internal_set_secret(const std::string& value) {
  
  secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MigrationPayload_OtpParameters::set_secret(std::string&& value) {
  
  secret_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:googleauth.MigrationPayload.OtpParameters.secret)
}
inline void MigrationPayload_OtpParameters::set_secret(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:googleauth.MigrationPayload.OtpParameters.secret)
}
inline void MigrationPayload_OtpParameters::set_secret(const void* value,
    size_t size) {
  
  secret_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:googleauth.MigrationPayload.OtpParameters.secret)
}
inline std::string* MigrationPayload_OtpParameters::_internal_mutable_secret() {
  
  return secret_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MigrationPayload_OtpParameters::release_secret() {
  // @@protoc_insertion_point(field_release:googleauth.MigrationPayload.OtpParameters.secret)
  return secret_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MigrationPayload_OtpParameters::set_allocated_secret(std::string* secret) {
  if (secret != nullptr) {
    
  } else {
    
  }
  secret_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), secret,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:googleauth.MigrationPayload.OtpParameters.secret)
}
inline std::string* MigrationPayload_OtpParameters::unsafe_arena_release_secret() {
  // @@protoc_insertion_point(field_unsafe_arena_release:googleauth.MigrationPayload.OtpParameters.secret)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return secret_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MigrationPayload_OtpParameters::unsafe_arena_set_allocated_secret(
    std::string* secret) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (secret != nullptr) {
    
  } else {
    
  }
  secret_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      secret, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:googleauth.MigrationPayload.OtpParameters.secret)
}

// string name = 2;
inline void MigrationPayload_OtpParameters::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MigrationPayload_OtpParameters::name() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.OtpParameters.name)
  return _internal_name();
}
inline void MigrationPayload_OtpParameters::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.OtpParameters.name)
}
inline std::string* MigrationPayload_OtpParameters::mutable_name() {
  // @@protoc_insertion_point(field_mutable:googleauth.MigrationPayload.OtpParameters.name)
  return _internal_mutable_name();
}
inline const std::string& MigrationPayload_OtpParameters::_internal_name() const {
  return name_.Get();
}
inline void MigrationPayload_OtpParameters::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MigrationPayload_OtpParameters::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:googleauth.MigrationPayload.OtpParameters.name)
}
inline void MigrationPayload_OtpParameters::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:googleauth.MigrationPayload.OtpParameters.name)
}
inline void MigrationPayload_OtpParameters::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:googleauth.MigrationPayload.OtpParameters.name)
}
inline std::string* MigrationPayload_OtpParameters::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MigrationPayload_OtpParameters::release_name() {
  // @@protoc_insertion_point(field_release:googleauth.MigrationPayload.OtpParameters.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MigrationPayload_OtpParameters::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:googleauth.MigrationPayload.OtpParameters.name)
}
inline std::string* MigrationPayload_OtpParameters::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:googleauth.MigrationPayload.OtpParameters.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MigrationPayload_OtpParameters::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:googleauth.MigrationPayload.OtpParameters.name)
}

// string issuer = 3;
inline void MigrationPayload_OtpParameters::clear_issuer() {
  issuer_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& MigrationPayload_OtpParameters::issuer() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.OtpParameters.issuer)
  return _internal_issuer();
}
inline void MigrationPayload_OtpParameters::set_issuer(const std::string& value) {
  _internal_set_issuer(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.OtpParameters.issuer)
}
inline std::string* MigrationPayload_OtpParameters::mutable_issuer() {
  // @@protoc_insertion_point(field_mutable:googleauth.MigrationPayload.OtpParameters.issuer)
  return _internal_mutable_issuer();
}
inline const std::string& MigrationPayload_OtpParameters::_internal_issuer() const {
  return issuer_.Get();
}
inline void MigrationPayload_OtpParameters::_internal_set_issuer(const std::string& value) {
  
  issuer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void MigrationPayload_OtpParameters::set_issuer(std::string&& value) {
  
  issuer_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:googleauth.MigrationPayload.OtpParameters.issuer)
}
inline void MigrationPayload_OtpParameters::set_issuer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  issuer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:googleauth.MigrationPayload.OtpParameters.issuer)
}
inline void MigrationPayload_OtpParameters::set_issuer(const char* value,
    size_t size) {
  
  issuer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:googleauth.MigrationPayload.OtpParameters.issuer)
}
inline std::string* MigrationPayload_OtpParameters::_internal_mutable_issuer() {
  
  return issuer_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* MigrationPayload_OtpParameters::release_issuer() {
  // @@protoc_insertion_point(field_release:googleauth.MigrationPayload.OtpParameters.issuer)
  return issuer_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MigrationPayload_OtpParameters::set_allocated_issuer(std::string* issuer) {
  if (issuer != nullptr) {
    
  } else {
    
  }
  issuer_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), issuer,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:googleauth.MigrationPayload.OtpParameters.issuer)
}
inline std::string* MigrationPayload_OtpParameters::unsafe_arena_release_issuer() {
  // @@protoc_insertion_point(field_unsafe_arena_release:googleauth.MigrationPayload.OtpParameters.issuer)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return issuer_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void MigrationPayload_OtpParameters::unsafe_arena_set_allocated_issuer(
    std::string* issuer) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (issuer != nullptr) {
    
  } else {
    
  }
  issuer_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      issuer, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:googleauth.MigrationPayload.OtpParameters.issuer)
}

// .googleauth.MigrationPayload.Algorithm algorithm = 4;
inline void MigrationPayload_OtpParameters::clear_algorithm() {
  algorithm_ = 0;
}
inline ::googleauth::MigrationPayload_Algorithm MigrationPayload_OtpParameters::_internal_algorithm() const {
  return static_cast< ::googleauth::MigrationPayload_Algorithm >(algorithm_);
}
inline ::googleauth::MigrationPayload_Algorithm MigrationPayload_OtpParameters::algorithm() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.OtpParameters.algorithm)
  return _internal_algorithm();
}
inline void MigrationPayload_OtpParameters::_internal_set_algorithm(::googleauth::MigrationPayload_Algorithm value) {
  
  algorithm_ = value;
}
inline void MigrationPayload_OtpParameters::set_algorithm(::googleauth::MigrationPayload_Algorithm value) {
  _internal_set_algorithm(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.OtpParameters.algorithm)
}

// int32 digits = 5;
inline void MigrationPayload_OtpParameters::clear_digits() {
  digits_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload_OtpParameters::_internal_digits() const {
  return digits_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload_OtpParameters::digits() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.OtpParameters.digits)
  return _internal_digits();
}
inline void MigrationPayload_OtpParameters::_internal_set_digits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  digits_ = value;
}
inline void MigrationPayload_OtpParameters::set_digits(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_digits(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.OtpParameters.digits)
}

// .googleauth.MigrationPayload.OtpType type = 6;
inline void MigrationPayload_OtpParameters::clear_type() {
  type_ = 0;
}
inline ::googleauth::MigrationPayload_OtpType MigrationPayload_OtpParameters::_internal_type() const {
  return static_cast< ::googleauth::MigrationPayload_OtpType >(type_);
}
inline ::googleauth::MigrationPayload_OtpType MigrationPayload_OtpParameters::type() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.OtpParameters.type)
  return _internal_type();
}
inline void MigrationPayload_OtpParameters::_internal_set_type(::googleauth::MigrationPayload_OtpType value) {
  
  type_ = value;
}
inline void MigrationPayload_OtpParameters::set_type(::googleauth::MigrationPayload_OtpType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.OtpParameters.type)
}

// int64 counter = 7;
inline void MigrationPayload_OtpParameters::clear_counter() {
  counter_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MigrationPayload_OtpParameters::_internal_counter() const {
  return counter_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 MigrationPayload_OtpParameters::counter() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.OtpParameters.counter)
  return _internal_counter();
}
inline void MigrationPayload_OtpParameters::_internal_set_counter(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  counter_ = value;
}
inline void MigrationPayload_OtpParameters::set_counter(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_counter(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.OtpParameters.counter)
}

// -------------------------------------------------------------------

// MigrationPayload

// repeated .googleauth.MigrationPayload.OtpParameters otp_parameters = 1;
inline int MigrationPayload::_internal_otp_parameters_size() const {
  return otp_parameters_.size();
}
inline int MigrationPayload::otp_parameters_size() const {
  return _internal_otp_parameters_size();
}
inline void MigrationPayload::clear_otp_parameters() {
  otp_parameters_.Clear();
}
inline ::googleauth::MigrationPayload_OtpParameters* MigrationPayload::mutable_otp_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:googleauth.MigrationPayload.otp_parameters)
  return otp_parameters_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::googleauth::MigrationPayload_OtpParameters >*
MigrationPayload::mutable_otp_parameters() {
  // @@protoc_insertion_point(field_mutable_list:googleauth.MigrationPayload.otp_parameters)
  return &otp_parameters_;
}
inline const ::googleauth::MigrationPayload_OtpParameters& MigrationPayload::_internal_otp_parameters(int index) const {
  return otp_parameters_.Get(index);
}
inline const ::googleauth::MigrationPayload_OtpParameters& MigrationPayload::otp_parameters(int index) const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.otp_parameters)
  return _internal_otp_parameters(index);
}
inline ::googleauth::MigrationPayload_OtpParameters* MigrationPayload::_internal_add_otp_parameters() {
  return otp_parameters_.Add();
}
inline ::googleauth::MigrationPayload_OtpParameters* MigrationPayload::add_otp_parameters() {
  // @@protoc_insertion_point(field_add:googleauth.MigrationPayload.otp_parameters)
  return _internal_add_otp_parameters();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::googleauth::MigrationPayload_OtpParameters >&
MigrationPayload::otp_parameters() const {
  // @@protoc_insertion_point(field_list:googleauth.MigrationPayload.otp_parameters)
  return otp_parameters_;
}

// int32 version = 2;
inline void MigrationPayload::clear_version() {
  version_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::version() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.version)
  return _internal_version();
}
inline void MigrationPayload::_internal_set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  version_ = value;
}
inline void MigrationPayload::set_version(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.version)
}

// int32 batch_size = 3;
inline void MigrationPayload::clear_batch_size() {
  batch_size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::_internal_batch_size() const {
  return batch_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::batch_size() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.batch_size)
  return _internal_batch_size();
}
inline void MigrationPayload::_internal_set_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  batch_size_ = value;
}
inline void MigrationPayload::set_batch_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_batch_size(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.batch_size)
}

// int32 batch_index = 4;
inline void MigrationPayload::clear_batch_index() {
  batch_index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::_internal_batch_index() const {
  return batch_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::batch_index() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.batch_index)
  return _internal_batch_index();
}
inline void MigrationPayload::_internal_set_batch_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  batch_index_ = value;
}
inline void MigrationPayload::set_batch_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_batch_index(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.batch_index)
}

// int32 batch_id = 5;
inline void MigrationPayload::clear_batch_id() {
  batch_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::_internal_batch_id() const {
  return batch_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MigrationPayload::batch_id() const {
  // @@protoc_insertion_point(field_get:googleauth.MigrationPayload.batch_id)
  return _internal_batch_id();
}
inline void MigrationPayload::_internal_set_batch_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  batch_id_ = value;
}
inline void MigrationPayload::set_batch_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_batch_id(value);
  // @@protoc_insertion_point(field_set:googleauth.MigrationPayload.batch_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace googleauth

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::googleauth::MigrationPayload_Algorithm> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::googleauth::MigrationPayload_Algorithm>() {
  return ::googleauth::MigrationPayload_Algorithm_descriptor();
}
template <> struct is_proto_enum< ::googleauth::MigrationPayload_OtpType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::googleauth::MigrationPayload_OtpType>() {
  return ::googleauth::MigrationPayload_OtpType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_google_5fauth_2eproto
